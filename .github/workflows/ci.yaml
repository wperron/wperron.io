name: "Deploy Static Site"
on:
  push:
    branches:
      - master
jobs:
  build:
    name: "Svelte Compile"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: "Setup Node"
        uses: actions/setup-node@v1
        with:
          node-version: 13.x
      - name: "Build JS"
        run: |
          npm install
          npm run build
      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: "Setup Python"
        uses: actions/setup-python@v1
        with:
          python-version: 3.x
          architecture: x64
      - name: "Deploy to S3"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
        run: |
          pip install -q awscli
          aws s3 sync ./public s3://wperron
  parse-md:
    name: "Parse and Publish Mardown Posts"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: 13.x
      - uses: actions/setup-python@v1
        with:
          python-version: 3.x
          architecture: x64
      - name: "Parse Markdown"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
        run: |
          pip install -q awscli
          npm install
          node md-parser.js > posts.json
          aws s3 cp posts.json s3://wperron/
  invalidate:
    name: "Invalidate CloudFront Cache"
    runs-on: ubuntu-latest
    needs: [build, parse-md]
    steps:
      - uses: actions/setup-python@v1
        with:
          python-version: 3.x
          architecture: x64
      - name: "Create CloudFront Invalidation"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
        run: |
          pip install -q awscli
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION }} --paths '/*'